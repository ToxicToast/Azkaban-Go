// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: warcraft/cronjobs/cronjob-media.proto

package cronjobs

import (
	warcraft "github.com/ToxicToast/Azkaban-Go/libs/proto/warcraft"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ðŸ“Œ Bilddaten fÃ¼r Charaktermedien
type Asset struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`     // z.â€¯B. avatar, inset, main-raw
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // URL zur Bilddatei
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Asset) Reset() {
	*x = Asset{}
	mi := &file_warcraft_cronjobs_cronjob_media_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_cronjobs_cronjob_media_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_warcraft_cronjobs_cronjob_media_proto_rawDescGZIP(), []int{0}
}

func (x *Asset) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Asset) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// ðŸ“Œ Media-Antwort fÃ¼r einen Charakter
type Media struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	XLinks        *warcraft.Self           `protobuf:"bytes,1,opt,name=_links,json=Links,proto3" json:"_links,omitempty"`
	Character     *warcraft.ShortCharacter `protobuf:"bytes,2,opt,name=character,proto3" json:"character,omitempty"`
	Assets        []*Asset                 `protobuf:"bytes,3,rep,name=assets,proto3" json:"assets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Media) Reset() {
	*x = Media{}
	mi := &file_warcraft_cronjobs_cronjob_media_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_cronjobs_cronjob_media_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_warcraft_cronjobs_cronjob_media_proto_rawDescGZIP(), []int{1}
}

func (x *Media) GetXLinks() *warcraft.Self {
	if x != nil {
		return x.XLinks
	}
	return nil
}

func (x *Media) GetCharacter() *warcraft.ShortCharacter {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *Media) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

var File_warcraft_cronjobs_cronjob_media_proto protoreflect.FileDescriptor

const file_warcraft_cronjobs_cronjob_media_proto_rawDesc = "" +
	"\n" +
	"%warcraft/cronjobs/cronjob-media.proto\x12\x11warcraft.cronjobs\x1a\x15warcraft/common.proto\"/\n" +
	"\x05Asset\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\x98\x01\n" +
	"\x05Media\x12%\n" +
	"\x06_links\x18\x01 \x01(\v2\x0e.warcraft.SelfR\x05Links\x126\n" +
	"\tcharacter\x18\x02 \x01(\v2\x18.warcraft.ShortCharacterR\tcharacter\x120\n" +
	"\x06assets\x18\x03 \x03(\v2\x18.warcraft.cronjobs.AssetR\x06assetsBHZFgithub.com/ToxicToast/Azkaban-Go/libs/proto/warcraft/cronjobs;cronjobsb\x06proto3"

var (
	file_warcraft_cronjobs_cronjob_media_proto_rawDescOnce sync.Once
	file_warcraft_cronjobs_cronjob_media_proto_rawDescData []byte
)

func file_warcraft_cronjobs_cronjob_media_proto_rawDescGZIP() []byte {
	file_warcraft_cronjobs_cronjob_media_proto_rawDescOnce.Do(func() {
		file_warcraft_cronjobs_cronjob_media_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_warcraft_cronjobs_cronjob_media_proto_rawDesc), len(file_warcraft_cronjobs_cronjob_media_proto_rawDesc)))
	})
	return file_warcraft_cronjobs_cronjob_media_proto_rawDescData
}

var file_warcraft_cronjobs_cronjob_media_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_warcraft_cronjobs_cronjob_media_proto_goTypes = []any{
	(*Asset)(nil),                   // 0: warcraft.cronjobs.Asset
	(*Media)(nil),                   // 1: warcraft.cronjobs.Media
	(*warcraft.Self)(nil),           // 2: warcraft.Self
	(*warcraft.ShortCharacter)(nil), // 3: warcraft.ShortCharacter
}
var file_warcraft_cronjobs_cronjob_media_proto_depIdxs = []int32{
	2, // 0: warcraft.cronjobs.Media._links:type_name -> warcraft.Self
	3, // 1: warcraft.cronjobs.Media.character:type_name -> warcraft.ShortCharacter
	0, // 2: warcraft.cronjobs.Media.assets:type_name -> warcraft.cronjobs.Asset
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_warcraft_cronjobs_cronjob_media_proto_init() }
func file_warcraft_cronjobs_cronjob_media_proto_init() {
	if File_warcraft_cronjobs_cronjob_media_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_warcraft_cronjobs_cronjob_media_proto_rawDesc), len(file_warcraft_cronjobs_cronjob_media_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_warcraft_cronjobs_cronjob_media_proto_goTypes,
		DependencyIndexes: file_warcraft_cronjobs_cronjob_media_proto_depIdxs,
		MessageInfos:      file_warcraft_cronjobs_cronjob_media_proto_msgTypes,
	}.Build()
	File_warcraft_cronjobs_cronjob_media_proto = out.File
	file_warcraft_cronjobs_cronjob_media_proto_goTypes = nil
	file_warcraft_cronjobs_cronjob_media_proto_depIdxs = nil
}
