// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: warcraft/cronjobs/cronjob-guild.proto

package cronjobs

import (
	warcraft "github.com/ToxicToast/Azkaban-Go/libs/proto/warcraft"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CrestMedia struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *warcraft.Key          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Id            int64                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CrestMedia) Reset() {
	*x = CrestMedia{}
	mi := &file_warcraft_cronjobs_cronjob_guild_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CrestMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrestMedia) ProtoMessage() {}

func (x *CrestMedia) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_cronjobs_cronjob_guild_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrestMedia.ProtoReflect.Descriptor instead.
func (*CrestMedia) Descriptor() ([]byte, []int) {
	return file_warcraft_cronjobs_cronjob_guild_proto_rawDescGZIP(), []int{0}
}

func (x *CrestMedia) GetKey() *warcraft.Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *CrestMedia) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CrestElement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Media         *CrestMedia            `protobuf:"bytes,2,opt,name=media,proto3" json:"media,omitempty"`
	Color         *warcraft.Color        `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CrestElement) Reset() {
	*x = CrestElement{}
	mi := &file_warcraft_cronjobs_cronjob_guild_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CrestElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrestElement) ProtoMessage() {}

func (x *CrestElement) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_cronjobs_cronjob_guild_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrestElement.ProtoReflect.Descriptor instead.
func (*CrestElement) Descriptor() ([]byte, []int) {
	return file_warcraft_cronjobs_cronjob_guild_proto_rawDescGZIP(), []int{1}
}

func (x *CrestElement) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CrestElement) GetMedia() *CrestMedia {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *CrestElement) GetColor() *warcraft.Color {
	if x != nil {
		return x.Color
	}
	return nil
}

type CrestBackground struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Color         *warcraft.Color        `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CrestBackground) Reset() {
	*x = CrestBackground{}
	mi := &file_warcraft_cronjobs_cronjob_guild_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CrestBackground) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrestBackground) ProtoMessage() {}

func (x *CrestBackground) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_cronjobs_cronjob_guild_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrestBackground.ProtoReflect.Descriptor instead.
func (*CrestBackground) Descriptor() ([]byte, []int) {
	return file_warcraft_cronjobs_cronjob_guild_proto_rawDescGZIP(), []int{2}
}

func (x *CrestBackground) GetColor() *warcraft.Color {
	if x != nil {
		return x.Color
	}
	return nil
}

type GuildCrest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Emblem        *CrestElement          `protobuf:"bytes,1,opt,name=emblem,proto3" json:"emblem,omitempty"`
	Border        *CrestElement          `protobuf:"bytes,2,opt,name=border,proto3" json:"border,omitempty"`
	Background    *CrestBackground       `protobuf:"bytes,3,opt,name=background,proto3" json:"background,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildCrest) Reset() {
	*x = GuildCrest{}
	mi := &file_warcraft_cronjobs_cronjob_guild_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildCrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildCrest) ProtoMessage() {}

func (x *GuildCrest) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_cronjobs_cronjob_guild_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildCrest.ProtoReflect.Descriptor instead.
func (*GuildCrest) Descriptor() ([]byte, []int) {
	return file_warcraft_cronjobs_cronjob_guild_proto_rawDescGZIP(), []int{3}
}

func (x *GuildCrest) GetEmblem() *CrestElement {
	if x != nil {
		return x.Emblem
	}
	return nil
}

func (x *GuildCrest) GetBorder() *CrestElement {
	if x != nil {
		return x.Border
	}
	return nil
}

func (x *GuildCrest) GetBackground() *CrestBackground {
	if x != nil {
		return x.Background
	}
	return nil
}

type Guild struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	XLinks            *warcraft.Self         `protobuf:"bytes,1,opt,name=_links,json=Links,proto3" json:"_links,omitempty"`
	Id                int64                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Faction           *warcraft.Faction      `protobuf:"bytes,4,opt,name=faction,proto3" json:"faction,omitempty"`
	AchievementPoints int64                  `protobuf:"varint,5,opt,name=achievement_points,json=achievementPoints,proto3" json:"achievement_points,omitempty"`
	MemberCount       int64                  `protobuf:"varint,6,opt,name=member_count,json=memberCount,proto3" json:"member_count,omitempty"`
	Realm             *warcraft.Realm        `protobuf:"bytes,7,opt,name=realm,proto3" json:"realm,omitempty"`
	Crest             *GuildCrest            `protobuf:"bytes,8,opt,name=crest,proto3" json:"crest,omitempty"`
	Roster            *warcraft.Key          `protobuf:"bytes,9,opt,name=roster,proto3" json:"roster,omitempty"`
	Achievements      *warcraft.Key          `protobuf:"bytes,10,opt,name=achievements,proto3" json:"achievements,omitempty"`
	CreatedTimestamp  int64                  `protobuf:"varint,11,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	Activity          *warcraft.Key          `protobuf:"bytes,12,opt,name=activity,proto3" json:"activity,omitempty"`
	NameSearch        string                 `protobuf:"bytes,13,opt,name=name_search,json=nameSearch,proto3" json:"name_search,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Guild) Reset() {
	*x = Guild{}
	mi := &file_warcraft_cronjobs_cronjob_guild_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Guild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guild) ProtoMessage() {}

func (x *Guild) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_cronjobs_cronjob_guild_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guild.ProtoReflect.Descriptor instead.
func (*Guild) Descriptor() ([]byte, []int) {
	return file_warcraft_cronjobs_cronjob_guild_proto_rawDescGZIP(), []int{4}
}

func (x *Guild) GetXLinks() *warcraft.Self {
	if x != nil {
		return x.XLinks
	}
	return nil
}

func (x *Guild) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Guild) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Guild) GetFaction() *warcraft.Faction {
	if x != nil {
		return x.Faction
	}
	return nil
}

func (x *Guild) GetAchievementPoints() int64 {
	if x != nil {
		return x.AchievementPoints
	}
	return 0
}

func (x *Guild) GetMemberCount() int64 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *Guild) GetRealm() *warcraft.Realm {
	if x != nil {
		return x.Realm
	}
	return nil
}

func (x *Guild) GetCrest() *GuildCrest {
	if x != nil {
		return x.Crest
	}
	return nil
}

func (x *Guild) GetRoster() *warcraft.Key {
	if x != nil {
		return x.Roster
	}
	return nil
}

func (x *Guild) GetAchievements() *warcraft.Key {
	if x != nil {
		return x.Achievements
	}
	return nil
}

func (x *Guild) GetCreatedTimestamp() int64 {
	if x != nil {
		return x.CreatedTimestamp
	}
	return 0
}

func (x *Guild) GetActivity() *warcraft.Key {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *Guild) GetNameSearch() string {
	if x != nil {
		return x.NameSearch
	}
	return ""
}

var File_warcraft_cronjobs_cronjob_guild_proto protoreflect.FileDescriptor

const file_warcraft_cronjobs_cronjob_guild_proto_rawDesc = "" +
	"\n" +
	"%warcraft/cronjobs/cronjob-guild.proto\x12\x11warcraft.cronjobs\x1a\x15warcraft/common.proto\"=\n" +
	"\n" +
	"CrestMedia\x12\x1f\n" +
	"\x03key\x18\x01 \x01(\v2\r.warcraft.KeyR\x03key\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x03R\x02id\"z\n" +
	"\fCrestElement\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x123\n" +
	"\x05media\x18\x02 \x01(\v2\x1d.warcraft.cronjobs.CrestMediaR\x05media\x12%\n" +
	"\x05color\x18\x03 \x01(\v2\x0f.warcraft.ColorR\x05color\"8\n" +
	"\x0fCrestBackground\x12%\n" +
	"\x05color\x18\x01 \x01(\v2\x0f.warcraft.ColorR\x05color\"\xc2\x01\n" +
	"\n" +
	"GuildCrest\x127\n" +
	"\x06emblem\x18\x01 \x01(\v2\x1f.warcraft.cronjobs.CrestElementR\x06emblem\x127\n" +
	"\x06border\x18\x02 \x01(\v2\x1f.warcraft.cronjobs.CrestElementR\x06border\x12B\n" +
	"\n" +
	"background\x18\x03 \x01(\v2\".warcraft.cronjobs.CrestBackgroundR\n" +
	"background\"\x80\x04\n" +
	"\x05Guild\x12%\n" +
	"\x06_links\x18\x01 \x01(\v2\x0e.warcraft.SelfR\x05Links\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12+\n" +
	"\afaction\x18\x04 \x01(\v2\x11.warcraft.FactionR\afaction\x12-\n" +
	"\x12achievement_points\x18\x05 \x01(\x03R\x11achievementPoints\x12!\n" +
	"\fmember_count\x18\x06 \x01(\x03R\vmemberCount\x12%\n" +
	"\x05realm\x18\a \x01(\v2\x0f.warcraft.RealmR\x05realm\x123\n" +
	"\x05crest\x18\b \x01(\v2\x1d.warcraft.cronjobs.GuildCrestR\x05crest\x12%\n" +
	"\x06roster\x18\t \x01(\v2\r.warcraft.KeyR\x06roster\x121\n" +
	"\fachievements\x18\n" +
	" \x01(\v2\r.warcraft.KeyR\fachievements\x12+\n" +
	"\x11created_timestamp\x18\v \x01(\x03R\x10createdTimestamp\x12)\n" +
	"\bactivity\x18\f \x01(\v2\r.warcraft.KeyR\bactivity\x12\x1f\n" +
	"\vname_search\x18\r \x01(\tR\n" +
	"nameSearchBHZFgithub.com/ToxicToast/Azkaban-Go/libs/proto/warcraft/cronjobs;cronjobsb\x06proto3"

var (
	file_warcraft_cronjobs_cronjob_guild_proto_rawDescOnce sync.Once
	file_warcraft_cronjobs_cronjob_guild_proto_rawDescData []byte
)

func file_warcraft_cronjobs_cronjob_guild_proto_rawDescGZIP() []byte {
	file_warcraft_cronjobs_cronjob_guild_proto_rawDescOnce.Do(func() {
		file_warcraft_cronjobs_cronjob_guild_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_warcraft_cronjobs_cronjob_guild_proto_rawDesc), len(file_warcraft_cronjobs_cronjob_guild_proto_rawDesc)))
	})
	return file_warcraft_cronjobs_cronjob_guild_proto_rawDescData
}

var file_warcraft_cronjobs_cronjob_guild_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_warcraft_cronjobs_cronjob_guild_proto_goTypes = []any{
	(*CrestMedia)(nil),       // 0: warcraft.cronjobs.CrestMedia
	(*CrestElement)(nil),     // 1: warcraft.cronjobs.CrestElement
	(*CrestBackground)(nil),  // 2: warcraft.cronjobs.CrestBackground
	(*GuildCrest)(nil),       // 3: warcraft.cronjobs.GuildCrest
	(*Guild)(nil),            // 4: warcraft.cronjobs.Guild
	(*warcraft.Key)(nil),     // 5: warcraft.Key
	(*warcraft.Color)(nil),   // 6: warcraft.Color
	(*warcraft.Self)(nil),    // 7: warcraft.Self
	(*warcraft.Faction)(nil), // 8: warcraft.Faction
	(*warcraft.Realm)(nil),   // 9: warcraft.Realm
}
var file_warcraft_cronjobs_cronjob_guild_proto_depIdxs = []int32{
	5,  // 0: warcraft.cronjobs.CrestMedia.key:type_name -> warcraft.Key
	0,  // 1: warcraft.cronjobs.CrestElement.media:type_name -> warcraft.cronjobs.CrestMedia
	6,  // 2: warcraft.cronjobs.CrestElement.color:type_name -> warcraft.Color
	6,  // 3: warcraft.cronjobs.CrestBackground.color:type_name -> warcraft.Color
	1,  // 4: warcraft.cronjobs.GuildCrest.emblem:type_name -> warcraft.cronjobs.CrestElement
	1,  // 5: warcraft.cronjobs.GuildCrest.border:type_name -> warcraft.cronjobs.CrestElement
	2,  // 6: warcraft.cronjobs.GuildCrest.background:type_name -> warcraft.cronjobs.CrestBackground
	7,  // 7: warcraft.cronjobs.Guild._links:type_name -> warcraft.Self
	8,  // 8: warcraft.cronjobs.Guild.faction:type_name -> warcraft.Faction
	9,  // 9: warcraft.cronjobs.Guild.realm:type_name -> warcraft.Realm
	3,  // 10: warcraft.cronjobs.Guild.crest:type_name -> warcraft.cronjobs.GuildCrest
	5,  // 11: warcraft.cronjobs.Guild.roster:type_name -> warcraft.Key
	5,  // 12: warcraft.cronjobs.Guild.achievements:type_name -> warcraft.Key
	5,  // 13: warcraft.cronjobs.Guild.activity:type_name -> warcraft.Key
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_warcraft_cronjobs_cronjob_guild_proto_init() }
func file_warcraft_cronjobs_cronjob_guild_proto_init() {
	if File_warcraft_cronjobs_cronjob_guild_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_warcraft_cronjobs_cronjob_guild_proto_rawDesc), len(file_warcraft_cronjobs_cronjob_guild_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_warcraft_cronjobs_cronjob_guild_proto_goTypes,
		DependencyIndexes: file_warcraft_cronjobs_cronjob_guild_proto_depIdxs,
		MessageInfos:      file_warcraft_cronjobs_cronjob_guild_proto_msgTypes,
	}.Build()
	File_warcraft_cronjobs_cronjob_guild_proto = out.File
	file_warcraft_cronjobs_cronjob_guild_proto_goTypes = nil
	file_warcraft_cronjobs_cronjob_guild_proto_depIdxs = nil
}
