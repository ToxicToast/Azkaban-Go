// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: warcraft/cronjob-character-profile.proto

package warcraft

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CovenantProgress struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ChosenCovenant *ChosenCovenant        `protobuf:"bytes,1,opt,name=chosen_covenant,json=chosenCovenant,proto3" json:"chosen_covenant,omitempty"`
	RenownLevel    int64                  `protobuf:"varint,2,opt,name=renown_level,json=renownLevel,proto3" json:"renown_level,omitempty"`
	Soulbinds      *Key                   `protobuf:"bytes,3,opt,name=soulbinds,proto3" json:"soulbinds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CovenantProgress) Reset() {
	*x = CovenantProgress{}
	mi := &file_warcraft_cronjob_character_profile_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CovenantProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CovenantProgress) ProtoMessage() {}

func (x *CovenantProgress) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_cronjob_character_profile_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CovenantProgress.ProtoReflect.Descriptor instead.
func (*CovenantProgress) Descriptor() ([]byte, []int) {
	return file_warcraft_cronjob_character_profile_proto_rawDescGZIP(), []int{0}
}

func (x *CovenantProgress) GetChosenCovenant() *ChosenCovenant {
	if x != nil {
		return x.ChosenCovenant
	}
	return nil
}

func (x *CovenantProgress) GetRenownLevel() int64 {
	if x != nil {
		return x.RenownLevel
	}
	return 0
}

func (x *CovenantProgress) GetSoulbinds() *Key {
	if x != nil {
		return x.Soulbinds
	}
	return nil
}

type Profile struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	XLinks                 *Self                  `protobuf:"bytes,1,opt,name=_links,json=Links,proto3" json:"_links,omitempty"`
	Id                     int64                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                   string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Gender                 *Gender                `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Faction                *Faction               `protobuf:"bytes,5,opt,name=faction,proto3" json:"faction,omitempty"`
	Race                   *Race                  `protobuf:"bytes,6,opt,name=race,proto3" json:"race,omitempty"`
	CharacterClass         *CharacterClass        `protobuf:"bytes,7,opt,name=character_class,json=characterClass,proto3" json:"character_class,omitempty"`
	ActiveSpec             *ActiveSpec            `protobuf:"bytes,8,opt,name=active_spec,json=activeSpec,proto3" json:"active_spec,omitempty"`
	Realm                  *Realm                 `protobuf:"bytes,9,opt,name=realm,proto3" json:"realm,omitempty"`
	Level                  int64                  `protobuf:"varint,10,opt,name=level,proto3" json:"level,omitempty"`
	Experience             int64                  `protobuf:"varint,11,opt,name=experience,proto3" json:"experience,omitempty"`
	AchievementPoints      int64                  `protobuf:"varint,12,opt,name=achievement_points,json=achievementPoints,proto3" json:"achievement_points,omitempty"`
	Achievements           *Key                   `protobuf:"bytes,13,opt,name=achievements,proto3" json:"achievements,omitempty"`
	Titles                 *Key                   `protobuf:"bytes,14,opt,name=titles,proto3" json:"titles,omitempty"`
	PvpSummary             *Key                   `protobuf:"bytes,15,opt,name=pvp_summary,json=pvpSummary,proto3" json:"pvp_summary,omitempty"`
	Encounters             *Key                   `protobuf:"bytes,16,opt,name=encounters,proto3" json:"encounters,omitempty"`
	Media                  *Key                   `protobuf:"bytes,17,opt,name=media,proto3" json:"media,omitempty"`
	LastLoginTimestamp     int64                  `protobuf:"varint,18,opt,name=last_login_timestamp,json=lastLoginTimestamp,proto3" json:"last_login_timestamp,omitempty"`
	AverageItemLevel       int64                  `protobuf:"varint,19,opt,name=average_item_level,json=averageItemLevel,proto3" json:"average_item_level,omitempty"`
	EquippedItemLevel      int64                  `protobuf:"varint,20,opt,name=equipped_item_level,json=equippedItemLevel,proto3" json:"equipped_item_level,omitempty"`
	Specializations        *Key                   `protobuf:"bytes,21,opt,name=specializations,proto3" json:"specializations,omitempty"`
	Statistics             *Key                   `protobuf:"bytes,22,opt,name=statistics,proto3" json:"statistics,omitempty"`
	MythicKeystoneProfile  *Key                   `protobuf:"bytes,23,opt,name=mythic_keystone_profile,json=mythicKeystoneProfile,proto3" json:"mythic_keystone_profile,omitempty"`
	Equipment              *Key                   `protobuf:"bytes,24,opt,name=equipment,proto3" json:"equipment,omitempty"`
	Appearance             *Key                   `protobuf:"bytes,25,opt,name=appearance,proto3" json:"appearance,omitempty"`
	Collections            *Key                   `protobuf:"bytes,26,opt,name=collections,proto3" json:"collections,omitempty"`
	ActiveTitle            *ActiveTitle           `protobuf:"bytes,27,opt,name=active_title,json=activeTitle,proto3" json:"active_title,omitempty"`
	Reputations            *Key                   `protobuf:"bytes,28,opt,name=reputations,proto3" json:"reputations,omitempty"`
	Quests                 *Key                   `protobuf:"bytes,29,opt,name=quests,proto3" json:"quests,omitempty"`
	AchievementsStatistics *Key                   `protobuf:"bytes,30,opt,name=achievements_statistics,json=achievementsStatistics,proto3" json:"achievements_statistics,omitempty"`
	Professions            *Key                   `protobuf:"bytes,31,opt,name=professions,proto3" json:"professions,omitempty"`
	CovenantProgress       *CovenantProgress      `protobuf:"bytes,32,opt,name=covenant_progress,json=covenantProgress,proto3" json:"covenant_progress,omitempty"`
	NameSearch             string                 `protobuf:"bytes,33,opt,name=name_search,json=nameSearch,proto3" json:"name_search,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Profile) Reset() {
	*x = Profile{}
	mi := &file_warcraft_cronjob_character_profile_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_cronjob_character_profile_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_warcraft_cronjob_character_profile_proto_rawDescGZIP(), []int{1}
}

func (x *Profile) GetXLinks() *Self {
	if x != nil {
		return x.XLinks
	}
	return nil
}

func (x *Profile) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Profile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Profile) GetGender() *Gender {
	if x != nil {
		return x.Gender
	}
	return nil
}

func (x *Profile) GetFaction() *Faction {
	if x != nil {
		return x.Faction
	}
	return nil
}

func (x *Profile) GetRace() *Race {
	if x != nil {
		return x.Race
	}
	return nil
}

func (x *Profile) GetCharacterClass() *CharacterClass {
	if x != nil {
		return x.CharacterClass
	}
	return nil
}

func (x *Profile) GetActiveSpec() *ActiveSpec {
	if x != nil {
		return x.ActiveSpec
	}
	return nil
}

func (x *Profile) GetRealm() *Realm {
	if x != nil {
		return x.Realm
	}
	return nil
}

func (x *Profile) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Profile) GetExperience() int64 {
	if x != nil {
		return x.Experience
	}
	return 0
}

func (x *Profile) GetAchievementPoints() int64 {
	if x != nil {
		return x.AchievementPoints
	}
	return 0
}

func (x *Profile) GetAchievements() *Key {
	if x != nil {
		return x.Achievements
	}
	return nil
}

func (x *Profile) GetTitles() *Key {
	if x != nil {
		return x.Titles
	}
	return nil
}

func (x *Profile) GetPvpSummary() *Key {
	if x != nil {
		return x.PvpSummary
	}
	return nil
}

func (x *Profile) GetEncounters() *Key {
	if x != nil {
		return x.Encounters
	}
	return nil
}

func (x *Profile) GetMedia() *Key {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *Profile) GetLastLoginTimestamp() int64 {
	if x != nil {
		return x.LastLoginTimestamp
	}
	return 0
}

func (x *Profile) GetAverageItemLevel() int64 {
	if x != nil {
		return x.AverageItemLevel
	}
	return 0
}

func (x *Profile) GetEquippedItemLevel() int64 {
	if x != nil {
		return x.EquippedItemLevel
	}
	return 0
}

func (x *Profile) GetSpecializations() *Key {
	if x != nil {
		return x.Specializations
	}
	return nil
}

func (x *Profile) GetStatistics() *Key {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *Profile) GetMythicKeystoneProfile() *Key {
	if x != nil {
		return x.MythicKeystoneProfile
	}
	return nil
}

func (x *Profile) GetEquipment() *Key {
	if x != nil {
		return x.Equipment
	}
	return nil
}

func (x *Profile) GetAppearance() *Key {
	if x != nil {
		return x.Appearance
	}
	return nil
}

func (x *Profile) GetCollections() *Key {
	if x != nil {
		return x.Collections
	}
	return nil
}

func (x *Profile) GetActiveTitle() *ActiveTitle {
	if x != nil {
		return x.ActiveTitle
	}
	return nil
}

func (x *Profile) GetReputations() *Key {
	if x != nil {
		return x.Reputations
	}
	return nil
}

func (x *Profile) GetQuests() *Key {
	if x != nil {
		return x.Quests
	}
	return nil
}

func (x *Profile) GetAchievementsStatistics() *Key {
	if x != nil {
		return x.AchievementsStatistics
	}
	return nil
}

func (x *Profile) GetProfessions() *Key {
	if x != nil {
		return x.Professions
	}
	return nil
}

func (x *Profile) GetCovenantProgress() *CovenantProgress {
	if x != nil {
		return x.CovenantProgress
	}
	return nil
}

func (x *Profile) GetNameSearch() string {
	if x != nil {
		return x.NameSearch
	}
	return ""
}

var File_warcraft_cronjob_character_profile_proto protoreflect.FileDescriptor

const file_warcraft_cronjob_character_profile_proto_rawDesc = "" +
	"\n" +
	"(warcraft/cronjob-character-profile.proto\x12\bwarcraft\x1a\x15warcraft/common.proto\"\xa5\x01\n" +
	"\x10CovenantProgress\x12A\n" +
	"\x0fchosen_covenant\x18\x01 \x01(\v2\x18.warcraft.ChosenCovenantR\x0echosenCovenant\x12!\n" +
	"\frenown_level\x18\x02 \x01(\x03R\vrenownLevel\x12+\n" +
	"\tsoulbinds\x18\x03 \x01(\v2\r.warcraft.KeyR\tsoulbinds\"\xf4\v\n" +
	"\aProfile\x12%\n" +
	"\x06_links\x18\x01 \x01(\v2\x0e.warcraft.SelfR\x05Links\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12(\n" +
	"\x06gender\x18\x04 \x01(\v2\x10.warcraft.GenderR\x06gender\x12+\n" +
	"\afaction\x18\x05 \x01(\v2\x11.warcraft.FactionR\afaction\x12\"\n" +
	"\x04race\x18\x06 \x01(\v2\x0e.warcraft.RaceR\x04race\x12A\n" +
	"\x0fcharacter_class\x18\a \x01(\v2\x18.warcraft.CharacterClassR\x0echaracterClass\x125\n" +
	"\vactive_spec\x18\b \x01(\v2\x14.warcraft.ActiveSpecR\n" +
	"activeSpec\x12%\n" +
	"\x05realm\x18\t \x01(\v2\x0f.warcraft.RealmR\x05realm\x12\x14\n" +
	"\x05level\x18\n" +
	" \x01(\x03R\x05level\x12\x1e\n" +
	"\n" +
	"experience\x18\v \x01(\x03R\n" +
	"experience\x12-\n" +
	"\x12achievement_points\x18\f \x01(\x03R\x11achievementPoints\x121\n" +
	"\fachievements\x18\r \x01(\v2\r.warcraft.KeyR\fachievements\x12%\n" +
	"\x06titles\x18\x0e \x01(\v2\r.warcraft.KeyR\x06titles\x12.\n" +
	"\vpvp_summary\x18\x0f \x01(\v2\r.warcraft.KeyR\n" +
	"pvpSummary\x12-\n" +
	"\n" +
	"encounters\x18\x10 \x01(\v2\r.warcraft.KeyR\n" +
	"encounters\x12#\n" +
	"\x05media\x18\x11 \x01(\v2\r.warcraft.KeyR\x05media\x120\n" +
	"\x14last_login_timestamp\x18\x12 \x01(\x03R\x12lastLoginTimestamp\x12,\n" +
	"\x12average_item_level\x18\x13 \x01(\x03R\x10averageItemLevel\x12.\n" +
	"\x13equipped_item_level\x18\x14 \x01(\x03R\x11equippedItemLevel\x127\n" +
	"\x0fspecializations\x18\x15 \x01(\v2\r.warcraft.KeyR\x0fspecializations\x12-\n" +
	"\n" +
	"statistics\x18\x16 \x01(\v2\r.warcraft.KeyR\n" +
	"statistics\x12E\n" +
	"\x17mythic_keystone_profile\x18\x17 \x01(\v2\r.warcraft.KeyR\x15mythicKeystoneProfile\x12+\n" +
	"\tequipment\x18\x18 \x01(\v2\r.warcraft.KeyR\tequipment\x12-\n" +
	"\n" +
	"appearance\x18\x19 \x01(\v2\r.warcraft.KeyR\n" +
	"appearance\x12/\n" +
	"\vcollections\x18\x1a \x01(\v2\r.warcraft.KeyR\vcollections\x128\n" +
	"\factive_title\x18\x1b \x01(\v2\x15.warcraft.ActiveTitleR\vactiveTitle\x12/\n" +
	"\vreputations\x18\x1c \x01(\v2\r.warcraft.KeyR\vreputations\x12%\n" +
	"\x06quests\x18\x1d \x01(\v2\r.warcraft.KeyR\x06quests\x12F\n" +
	"\x17achievements_statistics\x18\x1e \x01(\v2\r.warcraft.KeyR\x16achievementsStatistics\x12/\n" +
	"\vprofessions\x18\x1f \x01(\v2\r.warcraft.KeyR\vprofessions\x12G\n" +
	"\x11covenant_progress\x18  \x01(\v2\x1a.warcraft.CovenantProgressR\x10covenantProgress\x12\x1f\n" +
	"\vname_search\x18! \x01(\tR\n" +
	"nameSearchB?Z=github.com/ToxicToast/Azkaban-Go/libs/proto/warcraft;warcraftb\x06proto3"

var (
	file_warcraft_cronjob_character_profile_proto_rawDescOnce sync.Once
	file_warcraft_cronjob_character_profile_proto_rawDescData []byte
)

func file_warcraft_cronjob_character_profile_proto_rawDescGZIP() []byte {
	file_warcraft_cronjob_character_profile_proto_rawDescOnce.Do(func() {
		file_warcraft_cronjob_character_profile_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_warcraft_cronjob_character_profile_proto_rawDesc), len(file_warcraft_cronjob_character_profile_proto_rawDesc)))
	})
	return file_warcraft_cronjob_character_profile_proto_rawDescData
}

var file_warcraft_cronjob_character_profile_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_warcraft_cronjob_character_profile_proto_goTypes = []any{
	(*CovenantProgress)(nil), // 0: warcraft.CovenantProgress
	(*Profile)(nil),          // 1: warcraft.Profile
	(*ChosenCovenant)(nil),   // 2: warcraft.ChosenCovenant
	(*Key)(nil),              // 3: warcraft.Key
	(*Self)(nil),             // 4: warcraft.Self
	(*Gender)(nil),           // 5: warcraft.Gender
	(*Faction)(nil),          // 6: warcraft.Faction
	(*Race)(nil),             // 7: warcraft.Race
	(*CharacterClass)(nil),   // 8: warcraft.CharacterClass
	(*ActiveSpec)(nil),       // 9: warcraft.ActiveSpec
	(*Realm)(nil),            // 10: warcraft.Realm
	(*ActiveTitle)(nil),      // 11: warcraft.ActiveTitle
}
var file_warcraft_cronjob_character_profile_proto_depIdxs = []int32{
	2,  // 0: warcraft.CovenantProgress.chosen_covenant:type_name -> warcraft.ChosenCovenant
	3,  // 1: warcraft.CovenantProgress.soulbinds:type_name -> warcraft.Key
	4,  // 2: warcraft.Profile._links:type_name -> warcraft.Self
	5,  // 3: warcraft.Profile.gender:type_name -> warcraft.Gender
	6,  // 4: warcraft.Profile.faction:type_name -> warcraft.Faction
	7,  // 5: warcraft.Profile.race:type_name -> warcraft.Race
	8,  // 6: warcraft.Profile.character_class:type_name -> warcraft.CharacterClass
	9,  // 7: warcraft.Profile.active_spec:type_name -> warcraft.ActiveSpec
	10, // 8: warcraft.Profile.realm:type_name -> warcraft.Realm
	3,  // 9: warcraft.Profile.achievements:type_name -> warcraft.Key
	3,  // 10: warcraft.Profile.titles:type_name -> warcraft.Key
	3,  // 11: warcraft.Profile.pvp_summary:type_name -> warcraft.Key
	3,  // 12: warcraft.Profile.encounters:type_name -> warcraft.Key
	3,  // 13: warcraft.Profile.media:type_name -> warcraft.Key
	3,  // 14: warcraft.Profile.specializations:type_name -> warcraft.Key
	3,  // 15: warcraft.Profile.statistics:type_name -> warcraft.Key
	3,  // 16: warcraft.Profile.mythic_keystone_profile:type_name -> warcraft.Key
	3,  // 17: warcraft.Profile.equipment:type_name -> warcraft.Key
	3,  // 18: warcraft.Profile.appearance:type_name -> warcraft.Key
	3,  // 19: warcraft.Profile.collections:type_name -> warcraft.Key
	11, // 20: warcraft.Profile.active_title:type_name -> warcraft.ActiveTitle
	3,  // 21: warcraft.Profile.reputations:type_name -> warcraft.Key
	3,  // 22: warcraft.Profile.quests:type_name -> warcraft.Key
	3,  // 23: warcraft.Profile.achievements_statistics:type_name -> warcraft.Key
	3,  // 24: warcraft.Profile.professions:type_name -> warcraft.Key
	0,  // 25: warcraft.Profile.covenant_progress:type_name -> warcraft.CovenantProgress
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_warcraft_cronjob_character_profile_proto_init() }
func file_warcraft_cronjob_character_profile_proto_init() {
	if File_warcraft_cronjob_character_profile_proto != nil {
		return
	}
	file_warcraft_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_warcraft_cronjob_character_profile_proto_rawDesc), len(file_warcraft_cronjob_character_profile_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_warcraft_cronjob_character_profile_proto_goTypes,
		DependencyIndexes: file_warcraft_cronjob_character_profile_proto_depIdxs,
		MessageInfos:      file_warcraft_cronjob_character_profile_proto_msgTypes,
	}.Build()
	File_warcraft_cronjob_character_profile_proto = out.File
	file_warcraft_cronjob_character_profile_proto_goTypes = nil
	file_warcraft_cronjob_character_profile_proto_depIdxs = nil
}
