// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: warcraft/common.proto

package warcraft

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Key struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Href          string                 `protobuf:"bytes,1,opt,name=href,proto3" json:"href,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Key) Reset() {
	*x = Key{}
	mi := &file_warcraft_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_warcraft_common_proto_rawDescGZIP(), []int{0}
}

func (x *Key) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

type Self struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Href          *Key                   `protobuf:"bytes,1,opt,name=href,proto3" json:"href,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Self) Reset() {
	*x = Self{}
	mi := &file_warcraft_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Self) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Self) ProtoMessage() {}

func (x *Self) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Self.ProtoReflect.Descriptor instead.
func (*Self) Descriptor() ([]byte, []int) {
	return file_warcraft_common_proto_rawDescGZIP(), []int{1}
}

func (x *Self) GetHref() *Key {
	if x != nil {
		return x.Href
	}
	return nil
}

// ðŸ“Œ z.â€¯B. FEMALE / MALE + optional name
type Gender struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Gender) Reset() {
	*x = Gender{}
	mi := &file_warcraft_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Gender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gender) ProtoMessage() {}

func (x *Gender) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gender.ProtoReflect.Descriptor instead.
func (*Gender) Descriptor() ([]byte, []int) {
	return file_warcraft_common_proto_rawDescGZIP(), []int{2}
}

func (x *Gender) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Gender) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// ðŸ“Œ z.â€¯B. ALLIANCE / HORDE + optional name
type Faction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Faction) Reset() {
	*x = Faction{}
	mi := &file_warcraft_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Faction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Faction) ProtoMessage() {}

func (x *Faction) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Faction.ProtoReflect.Descriptor instead.
func (*Faction) Descriptor() ([]byte, []int) {
	return file_warcraft_common_proto_rawDescGZIP(), []int{3}
}

func (x *Faction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Faction) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// ðŸ“Œ z.â€¯B. Nachtelf / Mensch
type Race struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *Key                   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Id            int64                  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Race) Reset() {
	*x = Race{}
	mi := &file_warcraft_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Race) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Race) ProtoMessage() {}

func (x *Race) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Race.ProtoReflect.Descriptor instead.
func (*Race) Descriptor() ([]byte, []int) {
	return file_warcraft_common_proto_rawDescGZIP(), []int{4}
}

func (x *Race) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Race) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Race) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// ðŸ“Œ z.â€¯B. Magier / Paladin
type CharacterClass struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *Key                   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Id            int64                  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CharacterClass) Reset() {
	*x = CharacterClass{}
	mi := &file_warcraft_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterClass) ProtoMessage() {}

func (x *CharacterClass) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterClass.ProtoReflect.Descriptor instead.
func (*CharacterClass) Descriptor() ([]byte, []int) {
	return file_warcraft_common_proto_rawDescGZIP(), []int{5}
}

func (x *CharacterClass) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *CharacterClass) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CharacterClass) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// ðŸ“Œ z.â€¯B. Frost / Vergeltung
type ActiveSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *Key                   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Id            int64                  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActiveSpec) Reset() {
	*x = ActiveSpec{}
	mi := &file_warcraft_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActiveSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveSpec) ProtoMessage() {}

func (x *ActiveSpec) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveSpec.ProtoReflect.Descriptor instead.
func (*ActiveSpec) Descriptor() ([]byte, []int) {
	return file_warcraft_common_proto_rawDescGZIP(), []int{6}
}

func (x *ActiveSpec) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ActiveSpec) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ActiveSpec) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// ðŸ“Œ Realm-Daten inkl. Slug (z.â€¯B. blackmoore)
type Realm struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *Key                   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Id            int64                  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Slug          string                 `protobuf:"bytes,4,opt,name=slug,proto3" json:"slug,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Realm) Reset() {
	*x = Realm{}
	mi := &file_warcraft_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Realm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Realm) ProtoMessage() {}

func (x *Realm) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Realm.ProtoReflect.Descriptor instead.
func (*Realm) Descriptor() ([]byte, []int) {
	return file_warcraft_common_proto_rawDescGZIP(), []int{7}
}

func (x *Realm) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Realm) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Realm) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Realm) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

// ðŸ“Œ z.â€¯B. "Der groÃŸe Magister"
type ActiveTitle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *Key                   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Id            int64                  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	DisplayString *string                `protobuf:"bytes,4,opt,name=display_string,json=displayString,proto3,oneof" json:"display_string,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActiveTitle) Reset() {
	*x = ActiveTitle{}
	mi := &file_warcraft_common_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActiveTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveTitle) ProtoMessage() {}

func (x *ActiveTitle) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_common_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveTitle.ProtoReflect.Descriptor instead.
func (*ActiveTitle) Descriptor() ([]byte, []int) {
	return file_warcraft_common_proto_rawDescGZIP(), []int{8}
}

func (x *ActiveTitle) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ActiveTitle) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ActiveTitle) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActiveTitle) GetDisplayString() string {
	if x != nil && x.DisplayString != nil {
		return *x.DisplayString
	}
	return ""
}

// ðŸ“Œ z.â€¯B. Kyrian / Venthyr
type ChosenCovenant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *Key                   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Id            int64                  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChosenCovenant) Reset() {
	*x = ChosenCovenant{}
	mi := &file_warcraft_common_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChosenCovenant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChosenCovenant) ProtoMessage() {}

func (x *ChosenCovenant) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_common_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChosenCovenant.ProtoReflect.Descriptor instead.
func (*ChosenCovenant) Descriptor() ([]byte, []int) {
	return file_warcraft_common_proto_rawDescGZIP(), []int{9}
}

func (x *ChosenCovenant) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ChosenCovenant) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ChosenCovenant) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// ðŸ“Œ Vereinfachte Darstellung eines Charakters (z.â€¯B. in Media API)
type ShortCharacter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *Key                   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Id            int64                  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Realm         *Realm                 `protobuf:"bytes,4,opt,name=realm,proto3" json:"realm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShortCharacter) Reset() {
	*x = ShortCharacter{}
	mi := &file_warcraft_common_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortCharacter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortCharacter) ProtoMessage() {}

func (x *ShortCharacter) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_common_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortCharacter.ProtoReflect.Descriptor instead.
func (*ShortCharacter) Descriptor() ([]byte, []int) {
	return file_warcraft_common_proto_rawDescGZIP(), []int{10}
}

func (x *ShortCharacter) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ShortCharacter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShortCharacter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShortCharacter) GetRealm() *Realm {
	if x != nil {
		return x.Realm
	}
	return nil
}

// ðŸ“Œ RGBA-Farbe fÃ¼r Rating & Crest
type Color struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	R             int32                  `protobuf:"varint,1,opt,name=r,proto3" json:"r,omitempty"`
	G             int32                  `protobuf:"varint,2,opt,name=g,proto3" json:"g,omitempty"`
	B             int32                  `protobuf:"varint,3,opt,name=b,proto3" json:"b,omitempty"`
	A             int32                  `protobuf:"varint,4,opt,name=a,proto3" json:"a,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Color) Reset() {
	*x = Color{}
	mi := &file_warcraft_common_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Color) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Color) ProtoMessage() {}

func (x *Color) ProtoReflect() protoreflect.Message {
	mi := &file_warcraft_common_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Color.ProtoReflect.Descriptor instead.
func (*Color) Descriptor() ([]byte, []int) {
	return file_warcraft_common_proto_rawDescGZIP(), []int{11}
}

func (x *Color) GetR() int32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *Color) GetG() int32 {
	if x != nil {
		return x.G
	}
	return 0
}

func (x *Color) GetB() int32 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *Color) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

var File_warcraft_common_proto protoreflect.FileDescriptor

const file_warcraft_common_proto_rawDesc = "" +
	"\n" +
	"\x15warcraft/common.proto\x12\bwarcraft\"\x19\n" +
	"\x03Key\x12\x12\n" +
	"\x04href\x18\x01 \x01(\tR\x04href\")\n" +
	"\x04Self\x12!\n" +
	"\x04href\x18\x01 \x01(\v2\r.warcraft.KeyR\x04href\">\n" +
	"\x06Gender\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01B\a\n" +
	"\x05_name\"?\n" +
	"\aFaction\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01B\a\n" +
	"\x05_name\"Y\n" +
	"\x04Race\x12\x1f\n" +
	"\x03key\x18\x01 \x01(\v2\r.warcraft.KeyR\x03key\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\x03R\x02idB\a\n" +
	"\x05_name\"c\n" +
	"\x0eCharacterClass\x12\x1f\n" +
	"\x03key\x18\x01 \x01(\v2\r.warcraft.KeyR\x03key\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\x03R\x02idB\a\n" +
	"\x05_name\"_\n" +
	"\n" +
	"ActiveSpec\x12\x1f\n" +
	"\x03key\x18\x01 \x01(\v2\r.warcraft.KeyR\x03key\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\x03R\x02idB\a\n" +
	"\x05_name\"n\n" +
	"\x05Realm\x12\x1f\n" +
	"\x03key\x18\x01 \x01(\v2\r.warcraft.KeyR\x03key\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\x03R\x02id\x12\x12\n" +
	"\x04slug\x18\x04 \x01(\tR\x04slugB\a\n" +
	"\x05_name\"\x9f\x01\n" +
	"\vActiveTitle\x12\x1f\n" +
	"\x03key\x18\x01 \x01(\v2\r.warcraft.KeyR\x03key\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\x03R\x02id\x12*\n" +
	"\x0edisplay_string\x18\x04 \x01(\tH\x01R\rdisplayString\x88\x01\x01B\a\n" +
	"\x05_nameB\x11\n" +
	"\x0f_display_string\"c\n" +
	"\x0eChosenCovenant\x12\x1f\n" +
	"\x03key\x18\x01 \x01(\v2\r.warcraft.KeyR\x03key\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\x03R\x02idB\a\n" +
	"\x05_name\"|\n" +
	"\x0eShortCharacter\x12\x1f\n" +
	"\x03key\x18\x01 \x01(\v2\r.warcraft.KeyR\x03key\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\x03R\x02id\x12%\n" +
	"\x05realm\x18\x04 \x01(\v2\x0f.warcraft.RealmR\x05realm\"?\n" +
	"\x05Color\x12\f\n" +
	"\x01r\x18\x01 \x01(\x05R\x01r\x12\f\n" +
	"\x01g\x18\x02 \x01(\x05R\x01g\x12\f\n" +
	"\x01b\x18\x03 \x01(\x05R\x01b\x12\f\n" +
	"\x01a\x18\x04 \x01(\x05R\x01aB?Z=github.com/ToxicToast/Azkaban-Go/libs/proto/warcraft;warcraftb\x06proto3"

var (
	file_warcraft_common_proto_rawDescOnce sync.Once
	file_warcraft_common_proto_rawDescData []byte
)

func file_warcraft_common_proto_rawDescGZIP() []byte {
	file_warcraft_common_proto_rawDescOnce.Do(func() {
		file_warcraft_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_warcraft_common_proto_rawDesc), len(file_warcraft_common_proto_rawDesc)))
	})
	return file_warcraft_common_proto_rawDescData
}

var file_warcraft_common_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_warcraft_common_proto_goTypes = []any{
	(*Key)(nil),            // 0: warcraft.Key
	(*Self)(nil),           // 1: warcraft.Self
	(*Gender)(nil),         // 2: warcraft.Gender
	(*Faction)(nil),        // 3: warcraft.Faction
	(*Race)(nil),           // 4: warcraft.Race
	(*CharacterClass)(nil), // 5: warcraft.CharacterClass
	(*ActiveSpec)(nil),     // 6: warcraft.ActiveSpec
	(*Realm)(nil),          // 7: warcraft.Realm
	(*ActiveTitle)(nil),    // 8: warcraft.ActiveTitle
	(*ChosenCovenant)(nil), // 9: warcraft.ChosenCovenant
	(*ShortCharacter)(nil), // 10: warcraft.ShortCharacter
	(*Color)(nil),          // 11: warcraft.Color
}
var file_warcraft_common_proto_depIdxs = []int32{
	0, // 0: warcraft.Self.href:type_name -> warcraft.Key
	0, // 1: warcraft.Race.key:type_name -> warcraft.Key
	0, // 2: warcraft.CharacterClass.key:type_name -> warcraft.Key
	0, // 3: warcraft.ActiveSpec.key:type_name -> warcraft.Key
	0, // 4: warcraft.Realm.key:type_name -> warcraft.Key
	0, // 5: warcraft.ActiveTitle.key:type_name -> warcraft.Key
	0, // 6: warcraft.ChosenCovenant.key:type_name -> warcraft.Key
	0, // 7: warcraft.ShortCharacter.key:type_name -> warcraft.Key
	7, // 8: warcraft.ShortCharacter.realm:type_name -> warcraft.Realm
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_warcraft_common_proto_init() }
func file_warcraft_common_proto_init() {
	if File_warcraft_common_proto != nil {
		return
	}
	file_warcraft_common_proto_msgTypes[2].OneofWrappers = []any{}
	file_warcraft_common_proto_msgTypes[3].OneofWrappers = []any{}
	file_warcraft_common_proto_msgTypes[4].OneofWrappers = []any{}
	file_warcraft_common_proto_msgTypes[5].OneofWrappers = []any{}
	file_warcraft_common_proto_msgTypes[6].OneofWrappers = []any{}
	file_warcraft_common_proto_msgTypes[7].OneofWrappers = []any{}
	file_warcraft_common_proto_msgTypes[8].OneofWrappers = []any{}
	file_warcraft_common_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_warcraft_common_proto_rawDesc), len(file_warcraft_common_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_warcraft_common_proto_goTypes,
		DependencyIndexes: file_warcraft_common_proto_depIdxs,
		MessageInfos:      file_warcraft_common_proto_msgTypes,
	}.Build()
	File_warcraft_common_proto = out.File
	file_warcraft_common_proto_goTypes = nil
	file_warcraft_common_proto_depIdxs = nil
}
